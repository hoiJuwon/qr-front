{"version":3,"sources":["pages/Participant.js","pages/Admin.js","App.js","reportWebVitals.js","index.js"],"names":["getUserNameFromLocalStorage","window","localStorage","getItem","getIdFromLocalStorage","Container","styled","div","InfoWrapper","NameWrapper","QRContainer","RegisterBtn","button","Participant","useState","isNameRegistered","setIsNameRegistered","userName","inputs","setInputs","isQRGenerated","setIsQRGenerated","qrData","setQrData","useEffect","id","length","uuidv4","setItem","setIdToLocalStorage","generateQrHandler","data","JSON","stringify","placeholder","onChange","e","target","value","name","type","onClick","setUserNameToLocalStorage","fgColor","bgColor","Page","scanHandler","a","constraints","video","navigator","permissions","query","then","permissionObj","console","log","state","catch","error","mediaDevices","getUserMedia","stream","html5QrCode","Html5Qrcode","qrCodeSuccessCallback","decodedText","decodedResult","alert","config","fps","qrbox","width","height","start","facingMode","App","path","element","Admin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.49b87a24.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport QRCode from \"react-qr-code\";\n// import { GoogleSpreadsheet } from \"google-spreadsheet\";\n// import creds from \"../data/.key.js\";\n\nimport { v4 as uuidv4 } from \"uuid\";\nimport styled from \"styled-components\";\n\n/* here goes util function, too lazy to export and make it module.... */\nconst setUserNameToLocalStorage = (userName) => {\n  window.localStorage.setItem(\"userName\", userName);\n};\n\nconst setIdToLocalStorage = () => {\n  const id = uuidv4();\n  window.localStorage.setItem(\"id\", id);\n};\n\nconst getUserNameFromLocalStorage = () => {\n  return window.localStorage.getItem(\"userName\");\n};\n\nconst getIdFromLocalStorage = () => {\n  return window.localStorage.getItem(\"id\");\n};\n\nconst Container = styled.div`\n  margin: 0 auto;\n  width: 85%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst InfoWrapper = styled.div`\n  margin-top: 100px;\n  margin-bottom: 30px;\n  width: 85%;\n  h1 {\n    font-size: 28px;\n    font-weight: bold;\n    color: white;\n    text-align: left;\n  }\n  h2 {\n    font-size: 18px;\n    font-weight: 400;\n    opacity: 0.7;\n    color: white;\n    text-align: left;\n  }\n  p {\n    font-size: 12px;\n    opacity: 0.7;\n    color: white;\n    text-align: left;\n  }\n`;\n\nconst NameWrapper = styled.div`\n  margin-top: 100px;\n  width: 85%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n\n  input {\n    outline: none;\n    color: white;\n    border: 1px solid white;\n    border-radius: 3px;\n    background: transparent;\n    width: 95%;\n    padding-left: 10px;\n    height: 47px;\n    font-size: 18px;\n    margin-bottom: 40px;\n  }\n  ::placeholder {\n    opacity: 0.7;\n    padding-left: 10px;\n    font-size: 18px;\n  }\n\n  button {\n    border: none;\n    border-radius: 3px;\n    color: white;\n    background-color: #00244e;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-weight: bold;\n    font-size: 23px;\n    width: 100%;\n    height: 63px;\n  }\n`;\n\nconst QRContainer = styled.div`\n  border-radius: 10px;\n  background-color: #00244e;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto;\n  width: 300px;\n  height: 300px;\n  padding: 10px;\n  margin-bottom: 30px;\n`;\n\nconst RegisterBtn = styled.button`\n  color: white;\n  font-size: 18px;\n  font-weight: 600;\n  width: 180px;\n  height: 45px;\n  border-radius: 35px;\n  background-color: #00244e;\n  border: none;\n`;\n\nfunction Participant() {\n  const [isNameRegistered, setIsNameRegistered] = useState(false);\n  const [inputs, setInputs] = useState({\n    userName: \"\",\n  });\n  const [isQRGenerated, setIsQRGenerated] = useState(false);\n  const [qrData, setQrData] = useState(\"\");\n\n  const { userName } = inputs;\n\n  useEffect(() => {\n    const userName = getUserNameFromLocalStorage();\n    const id = getIdFromLocalStorage();\n    if (!id || id.length === 0) {\n      setIdToLocalStorage();\n    }\n    if (userName && userName.length !== 0 && id && id.length !== 0) {\n      setIsNameRegistered(() => true);\n      generateQrHandler();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  /*\n  async function registerUserNameToSheet() {\n    const userName = getUserNameFromLocalStorage();\n    const doc = new GoogleSpreadsheet(\n      \"1RtyZo6XUet4WWiH6kneedOonu1pmjPe_sNisnHgZOaQ\"\n    );\n    console.log(creds);\n    await doc.useServiceAccountAuth(creds);\n    await doc.loadInfo();\n\n    const date = new Date();\n    const sheetName = `${date.getFullYear()}-${date.getMonth() + 1}-${\n      date.getDay() + 1\n    }`;\n    let sheet = null;\n\n    if (doc.sheetsByTitle[sheetName] === undefined) {\n      sheet = await doc.addSheet({\n        title: sheetName,\n        headerValues: [\"name\", \"date\"],\n      });\n    } else {\n      sheet = doc.sheetsByTitle[sheetName];\n    }\n\n    const result = await sheet.addRow({ name: userName, date: new Date() });\n    console.log(result);\n  }\n  */\n\n  const onChange = (e) => {\n    const { value, name } = e.target;\n    setInputs({\n      ...inputs,\n      [name]: value,\n    });\n  };\n\n  const generateQrHandler = () => {\n    // TODO : generateQr with userName\n    const userName = getUserNameFromLocalStorage();\n    const id = getIdFromLocalStorage();\n    const data = {\n      id: id,\n      userName: userName,\n    };\n    setQrData(() => JSON.stringify(data));\n    setIsQRGenerated(() => true);\n  };\n\n  const registerUserName = () => {\n    setUserNameToLocalStorage(userName);\n    setIsNameRegistered(() => true);\n    generateQrHandler();\n  };\n\n  return (\n    <Container>\n      <InfoWrapper>\n        <h1>디사이퍼 QR 체크인</h1>\n        <h2>1. 이름등록</h2>\n        <h2>2. 현장에서 운영진에게 QR 체크인</h2>\n        <p>* 브라우저 캐시 삭제 시 이름을 재등록 해야합니다.</p>\n      </InfoWrapper>\n      {!isNameRegistered && (\n        <NameWrapper>\n          <input\n            placeholder=\"이름을 입력하세요\"\n            onChange={onChange}\n            value={userName}\n            name=\"userName\"\n          />\n          <button type=\"submit\" onClick={registerUserName}>\n            등록하기\n          </button>\n        </NameWrapper>\n      )}\n      {isQRGenerated && (\n        <>\n          <QRContainer>\n            <QRCode value={qrData} fgColor=\"#FFFFFF\" bgColor=\"transparent\" />\n          </QRContainer>\n          <RegisterBtn type=\"submit\">이름 재등록하기</RegisterBtn>\n        </>\n      )}\n    </Container>\n  );\n}\n\nexport default Participant;\n","import React from \"react\";\n\nimport { Html5Qrcode } from \"html5-qrcode\";\n\nfunction Page() {\n  const scanHandler = async () => {\n    const constraints = {\n      video: true,\n    };\n    navigator.permissions\n      .query({ name: \"camera\" })\n      .then((permissionObj) => {\n        console.log(permissionObj.state);\n      })\n      .catch((error) => {\n        console.log(\"Got error :\", error);\n      });\n\n    try {\n      let stream = await navigator.mediaDevices.getUserMedia(constraints);\n      console.log(stream);\n      /* use the stream */\n      const html5QrCode = new Html5Qrcode(\"reader\");\n      const qrCodeSuccessCallback = (decodedText, decodedResult) => {\n        /* handle success */\n        console.log(decodedText, decodedResult);\n        alert(\"출석!\");\n      };\n      const config = { fps: 900, qrbox: { width: 250, height: 250 } };\n\n      html5QrCode.start(\n        { facingMode: \"environment\" },\n        config,\n        qrCodeSuccessCallback\n      );\n    } catch (err) {\n      /* handle the error */\n    }\n  };\n  return (\n    <>\n      <div>admin page</div>\n      <button onClick={scanHandler}>scan</button>\n      <div id=\"reader\" width=\"600px\"></div>\n    </>\n  );\n}\n\nexport default Page;\n","import { Participant, Admin } from \"./pages\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport \"./App.css\";\n\nconst Container = styled.div`\n  margin: 0 auto;\n  height: 100vh;\n  width: 100%;\n  background-color: #001731;\n`;\n\nfunction App() {\n  return (\n    <Container>\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/\" element={<Participant />} />\n          <Route path=\"admin\" element={<Admin />} />\n        </Routes>\n      </BrowserRouter>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}